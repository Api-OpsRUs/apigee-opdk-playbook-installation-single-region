---
- hosts: localhost
  connection: local
  strategy: free
  vars_prompt:
    - name: aws_region
      prompt: "Which aws region do you want?"
      default: 'us-east-1'
    - name: userid
      prompt: "What is your userid?"
      default: 'v636401'
    - name: owner
      prompt: "Who should be listed in the owner tag?"
      default: 'nathaly.lozano@one.verizon.com'
    - name: vpc_subnet_id
      prompt: "Enter vpc subnet id (subnet-0756525c, subnet-8ea74af8):"
      default: 'subnet-0756525c'
  vars:
    image_id: 'ami-282a2b53'
    vsad: 'D0MV'
    instance_type: m4.2xlarge
    name_prefix: 'GTS-{{ vsad }}-Apigee-DC-{{ dc | default(1) }}'
    vpc_subnet_id: subnet-0756525c
    role: 'App'
    nostop: ''
    portfolioVp: 'Portfolio=GTS_VP=mahmoud.elassir@one.verizon.com'
    validate_ssh_timeout: 720
    validate_ssh_delay: 120
    ds_security_groups:
    - ss.nonprod.us-east-1.infrastructure.sg
    - 000-MASTER-SSH-ALL
    - 000-MASTER-HTTPS-ALL
    - 000-MASTER-HTTP-ALL
    - GTS-D0MV-Apigee-CSZK-SG
    ms_security_groups:
    - ss.nonprod.us-east-1.infrastructure.sg
    - 000-MASTER-SSH-ALL
    - 000-MASTER-HTTPS-ALL
    - 000-MASTER-HTTP-ALL
    - GTS-D0MV-Apigee-OPDK-SG
    rmp_security_groups:
    - ss.nonprod.us-east-1.infrastructure.sg
    - 000-MASTER-SSH-ALL
    - 000-MASTER-HTTPS-ALL
    - 000-MASTER-HTTP-ALL
    - GTS-D0MV-Apigee-RMP-SG
    qpid_security_groups:
    - ss.nonprod.us-east-1.infrastructure.sg
    - 000-MASTER-SSH-ALL
    - 000-MASTER-HTTPS-ALL
    - 000-MASTER-HTTP-ALL
    - GTS-D0MV-Apigee-Qpid-SG
    pg_security_groups:
    - ss.nonprod.us-east-1.infrastructure.sg
    - 000-MASTER-SSH-ALL
    - 000-MASTER-HTTPS-ALL
    - 000-MASTER-HTTP-ALL
    - GTS-D0MV-Apigee-Postgres-SG

  roles:
  - apigee-opdk-modules

  tasks: 
  - name: Create DS EC2 instances
    tags: ['ds']
    ec2:
      assign_public_ip: 'n'
      image: '{{ image_id }}'
      instance_type: '{{ instance_type }}'
      region: '{{ aws_region }}'
      state: present
      group: '{{ ds_security_groups }}'
      vpc_subnet_id: '{{ vpc_subnet_id }}'
      instance_tags:
        Name: '{{ name_prefix }}-DS{{ item }}'
        Role: '{{ role }}'
        Vsad: '{{ vsad }}'
        Userid: '{{ userid }}'
        nostop: '{{ nostop }}'
        Owner: '{{ owner }}'
        Portfolio_VP: '{{ portfolioVp }}'
    environment:
      http_proxy: http://proxy.ebiz.verizon.com:80
      https_proxy: http://proxy.ebiz.verizon.com:80
      no_proxy: 169.254.169.254
    register: ds_instance
    with_sequence: start={{ ds_start | default(1) }} end={{ ds_end | default(3) }}

  - name: Create MS EC2 instance
    tags: ['ms']
    ec2:
      assign_public_ip: 'n'
      image: '{{ image_id }}'
      instance_type: '{{ instance_type }}'
      region: '{{ aws_region }}'
      state: present
      group: '{{ ms_security_groups }}'
      vpc_subnet_id: '{{ vpc_subnet_id }}'
      instance_tags:
        Name: '{{ name_prefix }}-MS{{ item }}'
        Role: '{{ role }}'
        Vsad: '{{ vsad }}'
        Userid: '{{ userid }}'
        nostop: '{{ nostop }}'
        Owner: '{{ owner }}'
        Portfolio_VP: '{{ portfolioVp }}'
    environment:
      http_proxy: http://proxy.ebiz.verizon.com:80
      https_proxy: http://proxy.ebiz.verizon.com:80
      no_proxy: 169.254.169.254
    register: ms_instance
    with_sequence: start={{ ms_start | default(1) }} end={{ ms_end | default(1) }}

  - name: Create RMP EC2 instance
    tags: ['rmp']
    ec2:
      assign_public_ip: 'n'
      image: '{{ image_id }}'
      instance_type: '{{ instance_type }}'
      region: '{{ aws_region }}'
      state: present
      group: '{{ rmp_security_groups }}'
      vpc_subnet_id: '{{ vpc_subnet_id }}'
      instance_tags:
        Name: '{{ name_prefix }}-RMP{{ item }}'
        Role: '{{ role }}'
        Vsad: '{{ vsad }}'
        Userid: '{{ userid }}'
        nostop: '{{ nostop }}'
        Owner: '{{ owner }}'
        Portfolio_VP: '{{ portfolioVp }}'
    environment:
      http_proxy: http://proxy.ebiz.verizon.com:80
      https_proxy: http://proxy.ebiz.verizon.com:80
      no_proxy: 169.254.169.254
    register: rmp_instance
    with_sequence: start={{ rpm_start | default(1) }} end={{ rmp_end | default(2) }}

  - name: Create QPID EC2 instance
    tags: ['qpid']
    ec2:
      assign_public_ip: 'n'
      image: '{{ image_id }}'
      instance_type: '{{ instance_type }}'
      region: '{{ aws_region }}'
      state: present
      group: '{{ qpid_security_groups }}'
      vpc_subnet_id: '{{ vpc_subnet_id }}'
      instance_tags:
        Name: '{{ name_prefix }}-QPID{{ item }}'
        Role: '{{ role }}'
        Vsad: '{{ vsad }}'
        Userid: '{{ userid }}'
        nostop: '{{ nostop }}'
        Owner: '{{ owner }}'
        Portfolio_VP: '{{ portfolioVp }}'
    environment:
      http_proxy: http://proxy.ebiz.verizon.com:80
      https_proxy: http://proxy.ebiz.verizon.com:80
      no_proxy: 169.254.169.254
    register: qpid_instance
    with_sequence: start={{ qpid_start | default(1) }} end={{ qpid_end | default(2) }}

  - name: Create PS EC2 instance
    tags: ['pg']
    ec2:
      assign_public_ip: 'n'
      image: '{{ image_id }}'
      instance_type: '{{ instance_type }}'
      region: '{{ aws_region }}'
      state: present
      group: '{{ pg_security_groups }}'
      vpc_subnet_id: '{{ vpc_subnet_id }}'
      instance_tags:
        Name: '{{ name_prefix }}-PG{{ item }}'
        Role: '{{ role }}'
        Vsad: '{{ vsad }}'
        Userid: '{{ userid }}'
        nostop: '{{ nostop }}'
        Owner: '{{ owner }}'
        Portfolio_VP: '{{ portfolioVp }}'
    environment:
      http_proxy: http://proxy.ebiz.verizon.com:80
      https_proxy: http://proxy.ebiz.verizon.com:80
      no_proxy: 169.254.169.254
    register: pg_instance
    with_sequence: start={{ pg_start | default(1) }} end={{ pg_end | default(1) }}

  - name: Verify each hosts
    include: ec2-verification-of-hosts.yml
    async: 1500
    poll: 10
    loop_control:
      loop_var: result
    with_items:
    - '{{ ds_instance.results }}'
    - '{{ ms_instance.results }}'
    - '{{ rmp_instance.results }}'
    - '{{ qpid_instance.results }}'
    - '{{ pg_instance.results }}'

